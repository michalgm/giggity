{"version":3,"sources":["store/reducers.js","store/actions.js","store/index.js","socket.js","components/UserAvailability.js","components/Field.js","components/Form.js","components/Gig.js","components/User.js","views/GigList.js","components/Link.js","views/ProjectNav.js","views/SideBar.js","components/Login.js","components/Welcome.js","components/Errors.js","components/SignUp.js","components/ProjectSettings.js","views/project/ProjectProfile.js","views/project/Members.js","views/NavBar.js","components/Home.js","components/App.js","index.js"],"names":["defaultState","gigsList","currentGig","_id","currentUser","userAvailability","currentGigAvailability","users","errors","authenticated","drawerOpen","projects","currentProject","actions","loadGigs","payload","type","map","gig","Object","objectSpread","gigUpdated","loadGig","loadUsers","user","name","assign","loadProjects","setUser","setProject","loadGigAvailability","availabilityUpdated","loadUserAvailability","addError","removeError","updateDrawer","setAuth","resetApp","store","createStore","state","action","undefined","arguments","length","reduce","obj","member","concat","toConsumableArray","slice","availability","newState","defineProperty","memberId","date","Date","g","appReducer","window","__REDUX_DEVTOOLS_EXTENSION__","client","feathers","socket","io","transports","forceNew","configure","socketio","auth","storage","localStorage","emit","method","service","_len","args","Array","_key","Promise","resolve","reject","includes","apply","error","message","console","dispatch","login","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","email","password","project","wrap","_context","prev","next","authenticate","strategy","sent","abrupt","stop","_x","this","logout","handleAuth","_ref4","_callee2","_ref3","accessToken","_ref5","userId","photo","userData","_context2","passport","verifyJWT","keys","all","loadProject","_x2","on","userService","gigService","availabilityService","projectService","then","_ref6","_callee3","projectData","_context3","$in","$select","t0","role","_x3","$populate","Statuses","label","icon","react_default","createElement","ThumbUpTwoTone_default","fontSize","color","ThumbDownTwoTone_default","ThumbsUpDownTwoTone_default","HelpOutline_default","UserAvailability","updateAvailability","event","value","status","target","_this$props","_this","props","gigId","e","stopPropagation","preventDefault","_this$props2","_this$props2$buttons","buttons","_this$props2$availabi","_this$props2$availabi2","ToggleButtonGroup_default","exclusive","onChange","ToggleButton_default","key","style","FormControl_default","onClick","interceptClick","Select_default","MenuItem_default","Component","connect","fieldData","component","children","React","isValidElement","index_es","item","xs","lg","handleChange","handleBlur","onBlur","objectWithoutProperties","multiline","rows","TextField","shrink","Select","RadioGroup","options","option","index","control","CheckboxWithLabel","Label","fullWidth","InputLabelProps","field","formik_esm","inputProps","className","Form","submit","values","formikBag","res","onSubmit","setSubmitting","submitForm","autoSubmit","setTimeout","_this2","initialValues","fields","submitLabel","_this$props$buttons","enableReinitialize","handleSubmit","src_components_Field","variant","button","formatDate","moment","format","tab","Gig","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeTab","setState","saveGig","bind","assertThisInitialized","deleteGig","gigFilter","dateFields","defaultGig","description","start","end","custom_fields","set","get","default","updateGig","prevProps","id","match","params","data","_this3","forEach","toISOString","history","push","_this4","merge","deleteButton","src_components_Form","primary","TextField_default","nameFilter","components_UserAvailability","log","subheader","renderFilter","divider","_this$props3","Helmet","gutterBottom","align","Tabs_default","Tab_default","container","justify","alignItems","renderDetails","renderAvailbility","accessCode","User","updateUser","saveUser","deleteUser","_this$state","data-validators","GigList","renderGigItem","classes","Link","selected","to","primaryTypographyProps","title","secondaryTypographyProps","secondary","updateData","removeListener","gigs","Fragment","withStyles","theme","overflow","textOverflow","components_Link","links","ProjectNav","currentLocation","slicedToArray","text","link","Boolean","location","width","drawerWidth","showSidebar","pathname","split","anchor","open","PaperProps","views_GigList","views_ProjectNav","showLogin","Login","document","cookie","catch","finally","renderError","query","queryString","parse","search","maxWidth","margin","href","textAlign","display","flexDirection","justifyContent","height","size","Welcome","direction","spacing","raised","SimpleSnackbar","handleClose","reason","reverse","i","Snackbar_default","anchorOrigin","vertical","horizontal","ContentProps","root","onClose","IconButton_default","aria-label","close","Close_default","backgroundColor","palette","dark","padding","unit","activeStep","verificationCode","SignUp","result","_project","_email","_result","_email2","verified","project_id","Stepper_default","Step_default","StepLabel_default","renderSetupForm","autocomplete","renderCreateForm","renderVerifyForm","defaultField","private","types","ProjectSettings","saveProject","trim","renderField","arrayHelpers","move","icons_index_es","remove","join","Helmet_default","render","formProps","_ref$currentProject","roles","defaulState","Users","inviteMember","updateMember","deleteMember","userFields","NavBar","switchProject","reload","handleDrawerToggle","position","smUp","noWrap","flexGrow","renderSwitchProject","mapDispatchToProps","initialized","Home","public_routes","err","checkAuth","src_views_NavBar","src_views_SideBar","home","marginLeft","toolbar","Errors","es_Switch","es_Route","exact","path","ProjectProfile","project_Members","components_Welcome","appBar","zIndex","modal","mixins","background","flex","breakpoints","up","paper","withWidth","createMuiTheme","main","blue","pink","typography","useNextVariants","App","CssBaseline_default","core_styles","Switch_default","Route_default","ReactDOM","es","BrowserRouter","src_components_App","getElementById"],"mappings":"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","file":"static/js/main.3dfc6b3b.chunk.js","sourcesContent":["const defaultState = {\n  gigsList: [],\n  currentGig: {\n    _id: ''\n  },\n  currentUser: {},\n  userAvailability: {},\n  currentGigAvailability: {},\n  users: [],\n  errors: [],\n  authenticated: false,\n  drawerOpen: false,\n  projects: [],\n  currentProject: {}\n}\n\nconst appReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'LOAD_USERS':\n      return { ...state, users: action.payload };\n    case 'LOAD_PROJECTS':\n      return { ...state, projects: action.payload };\n    case 'SET_PROJECT':\n      return { ...state, currentProject: action.payload };\n    case 'SET_USER':\n      return { ...state, currentUser: action.payload };\n    case 'LOAD_GIGS':\n      return { ...state, gigsList: action.payload };\n    case 'LOAD_GIG':\n      return { ...state, currentGig: action.payload };\n    case 'LOAD_USER_AVAILABILITY':\n      return {\n        ...state,\n        userAvailability: action.payload\n          .reduce((obj, payload) => {\n            obj[payload.gig] = payload\n            return obj;\n          }, {})\n      };\n    case 'LOAD_GIG_AVAILABILITY':\n      return {\n        ...state,\n        currentGigAvailability: action.payload\n          .reduce((obj, payload) => {\n            obj[payload.member] = payload\n            return obj;\n          }, {})\n      };\n    case 'SET_AUTH':\n      return { ...state, authenticated: action.payload }\n    case 'ADD_ERROR':\n      return { ...state, errors: [action.payload, ...state.errors] }\n    case 'REMOVE_ERROR':\n      return { ...state, errors: [...state.errors.slice(1)] }\n    case 'UPDATE_AVAILABILITY': {\n      const availability = action.payload;\n      const { currentGig, currentUser } = state;\n      const newState = { ...state };\n      if (availability.gig === currentGig._id) {\n        newState.currentGigAvailability = {\n          ...state.currentGigAvailability,\n          [availability.member]: availability\n        };\n      }\n      if (availability.member === currentUser.memberId) {\n        newState.userAvailability = {\n          ...state.userAvailability,\n          [availability.gig]: availability\n        };\n      }\n      return newState;\n    }\n    case 'GIG_UPDATED': {\n      const gig = action.payload;\n      gig.date = new Date(gig.date);\n      const { currentGig, gigsList } = state;\n      const newState = { ...state };\n      if (gig._id === currentGig._id) {\n        newState.currentGig = {\n          ...currentGig,\n          ...gig\n        };\n      }\n      newState.gigsList = gigsList.map(g => {\n        return g._id === gig._id ? { ...g, ...gig } : g\n      })\n\n      return newState;\n    }\n    case 'UPDATE_DRAWER': {\n      return { ...state, drawerOpen: action.payload }\n    }\n    default:\n      return state;\n  }\n}\n\nexport default (state, action) => {\n  if (action.type === 'RESET_APP') {\n    state = undefined;\n  }\n  return appReducer(state, action)\n}\n","const actions = {\n  loadGigs: payload => ({\n    type: 'LOAD_GIGS',\n    payload: payload.map(gig => ({ ...gig }))\n  }),\n  gigUpdated: payload => ({\n    type: 'GIG_UPDATED',\n    payload\n  }),\n  loadGig: payload => ({\n    type: 'LOAD_GIG',\n    payload: { ...payload }\n  }),\n  loadUsers: payload => ({\n    type: 'LOAD_USERS',\n    payload: payload.map(user => {\n      if (user.user && user.user.name) {\n        delete user.user._id;\n        Object.assign(user, user.user);\n        delete user.user;\n      }\n      return user;\n    })\n  }),\n  loadProjects: payload => ({\n    type: 'LOAD_PROJECTS',\n    payload\n  }),\n  setUser: payload => ({\n    type: 'SET_USER',\n    payload\n  }),\n  setProject: payload => ({\n    type: 'SET_PROJECT',\n    payload\n  }),\n  loadGigAvailability: payload => ({\n    type: 'LOAD_GIG_AVAILABILITY',\n    payload\n  }),\n  availabilityUpdated: payload => ({\n    type: 'UPDATE_AVAILABILITY',\n    payload\n  }),\n  loadUserAvailability: payload => ({\n    type: 'LOAD_USER_AVAILABILITY',\n    payload\n  }),\n  addError: payload => ({\n    type: 'ADD_ERROR',\n    payload\n  }),\n  removeError: payload => ({\n    type: 'REMOVE_ERROR',\n    payload\n  }),\n  updateDrawer: payload => ({\n    type: 'UPDATE_DRAWER',\n    payload\n  }),\n  setAuth: payload => ({\n    type: 'SET_AUTH',\n    payload\n  }),\n  resetApp: () => ({ type: 'RESET_APP' })\n}\n\nexport default actions;\n","import { createStore } from 'redux'\nimport reducers from './reducers';\nimport actions from './actions';\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport {\n  store,\n  actions\n}\n","import io from 'socket.io-client';\nimport feathers from '@feathersjs/client';\nimport socketio from '@feathersjs/socketio-client';\nimport auth from '@feathersjs/authentication-client';\nimport { store, actions } from './store';\n\nconst client = feathers();\n\nexport const socket = io(null, {\n  transports: ['websocket'],\n  forceNew: true\n});\n\nclient.configure(socketio(socket));\nclient.configure(auth({ storage: window.localStorage }));\n\nexport const emit = (method, service, ...args) => {\n\n  return new Promise((resolve, reject) => {\n    if (!['create', 'find', 'get', 'patch', 'update', 'remove', 'authenticate'].includes(method)) {\n      return reject(`Invalid service method ${method}`);\n    }\n    socket.emit(method, `api/${service}`, ...args, (error, message) => {\n      if (error) {\n        console.error('EMIT ERROR', method, error);\n        store.dispatch({ type: 'ADD_ERROR', payload: error });\n        return reject(error);\n      }\n      resolve(message);\n    });\n  });\n};\n\nexport const authenticate = () => {\n  return client.authenticate()\n    .then(handleAuth)\n    .catch((err) => {\n      client.logout();\n      return Promise.reject(err)\n    })\n};\n\nexport const login = async ({ email, password, project }) => {\n  const login = await client.authenticate({\n    strategy: 'local',\n    email,\n    password,\n    project\n  });\n\n  return login;\n};\n\nexport const logout = () => {\n  client.logout();\n};\n\nconst handleAuth = async ({ accessToken }) => {\n  const { userId, projects, project, memberId } = await client.passport.verifyJWT(accessToken)\n  const { user } = (await emit('find', 'members', { user: userId, project }))[0];\n  const { email, name, photo } = user;\n  const userData = { userId, projects: Object.keys(projects), name, email, photo, memberId, project }\n\n  await Promise.all([\n    loadUsers(),\n    loadProjects(projects),\n    loadProject(project)\n  ])\n  store.dispatch(actions.setAuth(true));\n  store.dispatch(actions.setUser(userData));\n}\n\nclient.on('authenticated', handleAuth)\n\nclient.on('logout', () => {\n  store.dispatch(actions.resetApp());\n})\n\nexport const userService = client.service('api/members');\nexport const gigService = client.service('api/gigs');\nexport const availabilityService = client.service('api/gig-availability');\nexport const projectService = client.service('api/projects');\nexport const registrationService = client.service('api/registration');\n\nexport const loadProject = project => {\n  return emit('get', 'projects', project)\n    .then(project => store.dispatch(actions.setProject(project)))\n};\n\nconst loadProjects = async projects => {\n  const projectData = (await emit('find', 'projects', { _id: { $in: Object.keys(projects) }, $select: ['name'] }))\n    .map(project => ({ ...project, role: projects[project._id] }));\n  return store.dispatch(actions.loadProjects(projectData));\n};\n\nconst loadUsers = () => {\n  return emit('find', 'members', { '$populate': 'user' })\n    .then(users => store.dispatch(actions.loadUsers(users)));\n};\n\nconst gigUpdated = gig => {\n  store.dispatch(actions.gigUpdated(gig))\n}\n\nprojectService.on('patched', loadProject);\n\nuserService.on('created', loadUsers);\nuserService.on('patched', loadUsers);\nuserService.on('updated', loadUsers);\nuserService.on('removed', loadUsers);\n\n\ngigService.on('created', gigUpdated);\ngigService.on('patched', gigUpdated);\ngigService.on('updated', gigUpdated);\n\nconst availabilityUpdated = availability => {\n  store.dispatch(actions.availabilityUpdated(availability))\n}\n\navailabilityService.on('created', availabilityUpdated);\navailabilityService.on('patched', availabilityUpdated);\navailabilityService.on('updated', availabilityUpdated);\n","import React, { Component } from 'react';\nimport { emit } from '../socket'\nimport Select from '@material-ui/core/Select';\n// import InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUpTwoTone';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDownTwoTone';\nimport ThumbUpDownIcon from '@material-ui/icons/ThumbsUpDownTwoTone';\nimport UnknownIcon from '@material-ui/icons/HelpOutline';\n\nconst Statuses = [\n  { label: 'Available', icon: <ThumbUpIcon fontSize=\"inherit\" color=\"primary\" /> },\n  { label: 'Unavailable', icon: <ThumbDownIcon fontSize=\"inherit\" color=\"secondary\" /> },\n  { label: 'Maybe', icon: <ThumbUpDownIcon fontSize=\"inherit\" color=\"action\" /> },\n  { label: 'Unknown', icon: <UnknownIcon fontSize=\"inherit\" /> },\n];\n\nclass UserAvailability extends Component {\n\n  updateAvailability = (event, value) => {\n    const status = event.target.value || value;\n    if (!status) {\n      return;\n    }\n    const { gigId, memberId, availability } = this.props;\n    if (memberId && gigId) {\n      if (availability) {\n        emit('patch', 'gig-availability', availability._id, { member: memberId, gig: gigId, status });\n      } else {\n        emit('create', 'gig-availability', { member: memberId, gig: gigId, status });\n      }\n    }\n  }\n\n  interceptClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  render() {\n    const { buttons = false, availability: { status = 'Unknown' } = {} } = this.props;\n    if (buttons) {\n      return (\n        <ToggleButtonGroup\n          exclusive\n          value={status}\n          onChange={this.updateAvailability}\n        >\n          {\n            Statuses.map(status =>\n              <ToggleButton\n                key={status.label}\n                value={status.label}\n                style={{ fontSize: 24 }}\n              >\n                {status.icon}\n              </ToggleButton>\n            )\n          }\n        </ToggleButtonGroup>\n      )\n    }\n    return (\n      <FormControl onClick={this.interceptClick}>\n        <Select\n          value={status}\n          onChange={this.updateAvailability}\n        >\n          {\n            Statuses.map(status =>\n              <MenuItem\n                key={status.label}\n                value={status.label}\n              >\n                {status.icon} {status.label}\n              </MenuItem>)\n          }\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\n\nexport default UserAvailability;\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Field as FormikField } from 'formik';\nimport { Grid, MenuItem, FormControlLabel, Radio, InputLabel, FormControl, FormLabel } from '@material-ui/core';\nimport { TextField, Select, Checkbox, RadioGroup, Switch, CheckboxWithLabel } from 'formik-material-ui';\nimport './Field.scss';\n\nconst Field = fieldData => {\n  const users = fieldData.users || [];\n  if (React.isValidElement(fieldData)) {\n    return <Grid item xs={12} lg={6}>\n      {fieldData}\n    </Grid>\n  }\n\n  let component;\n  let children;\n  let label;\n  const { handleChange, handleBlur } = fieldData;\n  const { onChange, onBlur, ...props } = fieldData.props || {}\n  switch (fieldData.type) {\n    case 'Paragraph':\n      props.multiline = true;\n      props.rows = props.rows || 5;\n      component = TextField;\n      break;\n    case 'DateTime':\n      props.type = 'datetime-local';\n      component = TextField;\n      break;\n    case 'Date':\n      props.type = 'date';\n      component = TextField;\n      break;\n    case 'Member':\n      label = fieldData.label && <InputLabel shrink>{fieldData.label}</InputLabel>\n      component = Select;\n      children = users.map(({ _id, name }) => {\n        return <MenuItem key={_id} value={_id}>{name}</MenuItem>\n      })\n      break;\n    case 'Time':\n      props.type = 'time';\n      component = TextField;\n      break;\n    case 'Email':\n      component = TextField\n      props.type = 'email';\n      break;\n    case 'Text':\n      component = TextField\n      break;\n    case 'Multiple choice':\n    case 'Radio':\n      component = RadioGroup;\n      label = fieldData.label && <InputLabel shrink>{fieldData.label}</InputLabel>\n      children = fieldData.options.map((option, index) => {\n        return <FormControlLabel key={index} value={option.value || option} control={<Radio />} label={option.label || option} />\n      })\n      break;\n    case 'Checkboxes':\n      component = CheckboxWithLabel;\n      props.Label = { label: fieldData.label };\n      break;\n    case 'Link':\n      component = TextField;\n      props.type = 'url';\n      break;\n    case 'Dropdown':\n    case 'Select':\n      label = fieldData.label && <InputLabel shrink>{fieldData.label}</InputLabel>\n      component = Select;\n      children = fieldData.options.map((option, index) => {\n        return <MenuItem key={index} value={option.value || option}>{option.label || option}</MenuItem>\n      })\n      break;\n    default:\n      component = TextField\n  }\n  if (!label) {\n  }\n  if (component === TextField) {\n    props.fullWidth = true;\n    props.InputLabelProps = { shrink: true }\n  }\n\n  const field = <FormikField\n    name={fieldData.name}\n    label={fieldData.label || fieldData.name}\n    component={component}\n    {...props}\n    inputProps={{\n      onChange: e => {\n        handleChange(e); onChange && onChange(e);\n      },\n      onBlur: e => {\n        handleBlur(e); onBlur && onBlur(e);\n      }\n    }}\n  >\n    {children}\n  </FormikField>\n\n  return (\n    <Grid item xs={12} lg={6} className='form-field'>\n      {label ?\n        (<FormControl fullWidth className={`field-${fieldData.type}`}>\n          {label}\n          {field}\n        </FormControl>) : field\n      }\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => ({ users: state.users });\n\nexport default connect(mapStateToProps)(Field);\n","import React, { Component } from 'react';\nimport { Formik, Form as FormikForm } from 'formik';\nimport { Button } from '@material-ui/core';\nimport Field from './Field';\nimport './Form.scss';\n\nclass Form extends Component {\n  submit = async (values, formikBag) => {\n    try {\n      const res = this.props.onSubmit(values, formikBag);\n      await Promise.resolve(res);\n    } catch (err) {\n      console.error('Form submit error', err);\n    }\n    formikBag.setSubmitting(false);\n  }\n\n  handleChange = (e, handleChange, submitForm) => {\n    handleChange(e);\n    if (this.props.autoSubmit) {\n      setTimeout(submitForm);\n    }\n  }\n\n  render() {\n    const { initialValues, fields, submitLabel, buttons = [] } = this.props;\n    return (\n      <Formik onSubmit={this.submit} initialValues={initialValues} enableReinitialize={true} >\n        {({ handleSubmit, handleChange, handleBlur, submitForm, values, errors }) => (\n          <FormikForm className='giggity-form' >\n            {\n              fields.map((field, index) => {\n                return <Field key={index} handleChange={e => { this.handleChange(e, handleChange, submitForm); }} handleBlur={handleBlur} {...field} />\n              })\n            }\n            {submitLabel && <div className='buttons'>\n              <Button variant='contained' color='primary' type='submit'>{submitLabel}</Button>\n              {buttons.map((button, index) => (<span key={index}>{button}</span>))}\n            </div>}\n          </FormikForm>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport { Button } from '@material-ui/core';\nimport { Typography, Grid } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Helmet } from 'react-helmet';\nimport { Formik, Form, Field } from 'formik';\nimport UserAvailability from './UserAvailability';\nimport UITextField from '@material-ui/core/TextField';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { List, ListItem, ListItemText, ListItemIcon, ListItemSecondaryAction, ListSubheader, Paper, Link as MUILink } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { emit } from '../socket'\nimport moment from 'moment'\nimport { get, set, merge } from 'lodash';\nimport GiggityForm from './Form';\n\nconst formatDate = date => moment(date || new Date()).format('YYYY-MM-DDTHH:mm')\n\nconst defaultState = {\n  _id: null,\n  tab: 'details'\n}\n\nclass Gig extends Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n    this.saveGig = this.saveGig.bind(this);\n    this.deleteGig = this.deleteGig.bind(this);\n    this.state.gigFilter = '';\n    this.dateFields = ['start', 'end', 'load_in', 'event_start', 'event_end'];\n    this.defaultGig = {\n      name: '',\n      description: '',\n      start: formatDate(),\n      end: formatDate()\n    };\n    (this.props.currentProject.custom_fields || []).map((field) => {\n      set(this.defaultGig, `custom_fields.${field.label}`, get(this.defaultGig, `custom_fields.${field.label}`) || field.default || \"\");\n    });\n\n  };\n  componentDidMount() {\n    this.updateGig();\n  };\n\n\n  componentDidUpdate(prevProps) {\n    const { id } = this.props.match.params;\n    const { currentGig } = this.props;\n    if (id !== prevProps.match.params.id) {\n      this.updateGig();\n      if (this.props.drawerOpen) {\n        this.props.updateDrawer(false);\n      }\n      // } else if (currentGig._id && currentGig._id !== id && id) {\n      //   // currentGig.start = formatDate(currentGig.start)\n      //   // currentGig.end = formatDate(currentGig.end)\n      //   // this.setState(currentGig);\n      //   if (this.props.drawerOpen) {\n      //     this.props.updateDrawer(false);\n      //   }\n    }\n  };\n\n  componentWillUnmount() {\n    this.props.loadGig({});\n    this.props.loadGigAvailability([]);\n  }\n\n  updateGig() {\n\n    const { id } = this.props.match.params;\n    if (id) {\n      emit('get', 'gigs', id)\n        .then(message => {\n          this.props.loadGig(message);\n        })\n      emit('find', 'gig-availability', { gig: id })\n        .then(availability => {\n          this.props.loadGigAvailability(availability.data)\n        })\n    } else {\n      this.setState(defaultState);\n      this.props.loadGig(defaultState);\n    }\n  };\n\n  saveGig(values) {\n    const { id } = this.props.match.params;\n    this.dateFields.forEach(field => {\n      values[field] = moment(values[field], 'YYYY-MM-DDTHH:mm').toISOString()\n    })\n    delete values._id;\n    return (id ?\n      emit('patch', 'gigs', id, values) :\n      emit('create', 'gigs', values)\n    )\n      .then(gig => {\n        if (!id) {\n          this.props.history.push(`/gigs/${gig._id}`);\n        }\n      })\n  };\n\n  deleteGig() {\n    const { id } = this.props.match.params;\n    return emit('remove', 'gigs', id)\n      .then(() => {\n        this.props.history.push(`/`);\n      })\n  }\n\n  changeTab = (event, tab) => {\n    this.setState({ tab });\n  }\n\n  renderDetails() {\n    const { currentGig, currentProject } = this.props;\n    const { id } = this.props.match.params;\n\n    const gig = merge({}, this.defaultGig, currentGig);\n\n    this.dateFields.forEach(field => {\n      gig[field] = formatDate(currentGig[field])\n    })\n\n    const custom_fields = (currentProject.custom_fields || []).map((field) => {\n      set(gig, `custom_fields.${field.label}`, get(gig, `custom_fields.${field.label}`) || field.default || \"\");\n      return { ...field, name: `custom_fields.${field.label}` }\n    });\n\n    const fields = [\n      { type: 'Text', label: 'Name', name: 'name' },\n      { type: 'DateTime', label: 'Start Time', name: 'start' },\n      { type: 'DateTime', label: 'End Time', name: 'end' },\n      { type: 'Paragraph', label: 'Description', name: 'description' },\n      ...custom_fields\n    ]\n\n    const deleteButton = <Button variant=\"outlined\" onClick={this.deleteGig}>\n      Delete Gig\n    </Button>\n\n    return (\n      <GiggityForm\n        onSubmit={this.saveGig}\n        initialValues={id ? gig : this.defaultGig}\n        fields={fields}\n        buttons={[deleteButton]}\n        submitLabel=\"Save Gig\"\n      />\n    );\n  }\n\n  renderFilter() {\n    return <ListSubheader>\n      Filter\n      <ListItemText\n        primary={\n          <UITextField name='name-filter' value={this.state.nameFilter} label=\"Name\" />\n        }\n      />\n      <ListItemSecondaryAction>\n        <UserAvailability />\n      </ListItemSecondaryAction>\n    </ListSubheader>\n  }\n\n  renderAvailbility() {\n    const { id } = this.props.match.params;\n    const { users, currentGigAvailability } = this.props;\n    console.log(currentGigAvailability);\n    if (id) {\n      return (\n        <List subheader={this.renderFilter()}>\n          {\n            users.map(user => {\n              return (\n                <ListItem\n                  divider\n                  key={user._id}\n                >\n                  <ListItemText\n                    primary={user.name}\n                  />\n                  <ListItemSecondaryAction>\n                    <UserAvailability\n                      buttons\n                      memberId={user._id}\n                      gigId={id} availability={currentGigAvailability[user._id]}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              )\n            })\n          }\n        </List>\n      )\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { currentGig, currentProject } = this.props;\n    const { tab } = this.state;\n\n    return (\n      <div>\n        <Helmet>\n          <title>{`Giggity - ${currentGig.name}`}</title>\n        </Helmet>\n        {id ?\n          <Typography\n            variant='h4'\n            gutterBottom\n            align=\"center\"\n          >\n            {currentGig.name}\n          </Typography>\n          : null}\n        <Tabs value={tab} onChange={this.changeTab} variant=\"fullWidth\">\n          <Tab value='details' label=\"Details\" />\n          <Tab value='availability' label=\"availability\" />\n        </Tabs>\n\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} lg={6}>\n            {tab === 'details' && this.renderDetails()}\n            {tab === 'availability' && this.renderAvailbility()}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(\n  state => ((({ users, currentGig, currentGigAvailability, drawerOpen, currentProject }) => ({ users, currentGig, currentGigAvailability, drawerOpen, currentProject }))(state)),\n  {\n    loadGig: actions.loadGig,\n    loadGigAvailability: actions.loadGigAvailability,\n    updateAvailability: actions.updateAvailability,\n    updateDrawer: actions.updateDrawer\n  }\n)(Gig);\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { TextField, Select } from 'formik-material-ui';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form, Field } from 'formik';\nimport { emit } from '../socket';\n\nconst defaultState = {\n  name: '',\n  password: '',\n  email: '',\n  accessCode: '',\n  id: null\n}\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n    this.saveUser = this.saveUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n  };\n\n  componentDidMount() {\n    this.updateUser();\n  };\n\n  componentDidUpdate(prevProps) {\n    const { id } = this.props.match.params;\n    if (id !== prevProps.match.params.id) {\n      this.updateUser();\n    }\n  };\n\n\n  updateUser = () => {\n    const { id } = this.props.match.params;\n    if (id) {\n      emit('get', 'users', id)\n        .then(user => this.setState(user));\n    } else {\n      this.setState(defaultState);\n    }\n  };\n\n  saveUser = (values) => {\n    const { id } = this.props.match.params;\n    this.setState(defaultState);\n    delete values.id;\n    return (id ?\n      emit('patch', 'users', id, values) :\n      emit('create', 'users', values)\n    )\n      .then(user => {\n        if (user._id !== this.props.match.params.id) {\n          this.props.history.push(`members/${user._id}`)\n        } else {\n          this.setState(user)\n        }\n      });\n  };\n\n  deleteUser = () => {\n    const { id } = this.props.match.params;\n    return emit('remove', 'users', id)\n      .then(() => {\n        this.props.history.push(`/`);\n      })\n\n  }\n\n  render() {\n    const { name, accessCode } = this.state;\n    return (\n      <div>\n        <h3>{name}</h3>\n        <i>Access code is {accessCode} </i>\n        <Formik onSubmit={this.saveUser} initialValues={this.state} enableReinitialize={true}>\n          {({ handleSubmit, handleChange, handleBlur, values, errors }) => (\n            <Form>\n              <Field\n                name=\"name\"\n                label=\"Name\"\n                data-validators=\"isRequired\"\n                component={TextField}\n              />\n              {/* <Field\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                component={TextField}\n              /> */}\n              <Field\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                data-validators=\"isRequired\"\n                component={TextField}\n              />\n              {/* <Field\n                name=\"project\"\n                label=\"Project\"\n                data-validators=\"isRequired\"\n                fullWidth\n                component={Select}\n                >\n                {\n                  projects.map(p => <MenuItem key={p._id} value={p._id}>{p.name}</MenuItem>)\n                }\n              </Field> */}\n              <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                Save User\n              </Button>\n              <Button variant=\"contained\" onClick={this.deleteUser} color=\"secondary\">\n                Delete User\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users\n})\n\nexport default connect(mapStateToProps)(User);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport { Link } from 'react-router-dom'\nimport { ListItem, ListItemText, ListItemIcon, Link as MUILink } from '@material-ui/core';\nimport UserAvailability from '../components/UserAvailability';\nimport { gigService, userService, emit } from '../socket'\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nconst styles = theme => ({\n  title: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  }\n});\n\nclass GigList extends Component {\n  constructor(props) {\n    super(props);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    userService.on('patched', this.updateData);\n    gigService.on('created', this.updateData);\n    gigService.on('removed', this.updateData);\n    this.updateData();\n  }\n\n  componentWillUnmount() {\n    userService.removeListener('patched', this.updateData);\n    gigService.removeListener('created', this.updateData);\n    gigService.removeListener('removed', this.updateData);\n  }\n\n  updateData() {\n    const { currentUser } = this.props;\n    emit('find', 'gigs')\n      .then(gigs => this.props.loadGigs(gigs.data));\n\n    emit('find', 'gig-availability', { user: currentUser.memberId })\n      .then(res => this.props.loadUserAvailability(res.data));\n  }\n\n  renderGigItem = (gig) => {\n    const { currentGig, userAvailability, currentUser, classes } = this.props;\n    const date = moment(gig.start).format('MM/DD');\n    return (\n      <ListItem\n        button\n        divider\n        key={gig._id}\n        component={Link}\n        selected={currentGig._id === gig._id}\n        to={`/gigs/${gig._id}`}\n        alignItems=\"flex-start\"\n      >\n        <ListItemIcon>\n          <b>{date}</b>\n        </ListItemIcon>\n        <ListItemText\n          primaryTypographyProps={{ className: classes.title }}\n          secondaryTypographyProps={{ component: 'div' }}\n          primary={\n            <MUILink\n              component='span'\n            >\n              {gig.name}\n            </MUILink>\n          }\n          secondary={\n            <UserAvailability\n              memberId={currentUser.memberId}\n              gigId={gig._id} availability={userAvailability[gig._id]}\n            />\n          } />\n      </ListItem>\n    );\n  }\n\n  render() {\n    const { gigsList, currentGig } = this.props;\n    return (\n      <>\n        <ListItem\n          button\n          component={Link}\n          to={`/gigs/new`}\n          selected={currentGig._id === null}\n        >\n          <ListItemText primary=\"New Gig!\" />\n        </ListItem>\n        {\n          gigsList.map(this.renderGigItem)\n        }\n      </>\n    );\n  }\n}\n\nexport default connect(\n  state => ((({ gigsList, currentGig, currentUser, userAvailability }) => ({ gigsList, currentGig, currentUser, userAvailability }))(state)),\n  { loadGigs: actions.loadGigs, loadUserAvailability: actions.loadUserAvailability }\n)(withStyles(styles)(GigList));\n","import React from 'react';\nimport { Link as MUILink } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nexport default props => <MUILink component={Link} {...props} />\n","import React from 'react';\nimport Link from '../components/Link'\nimport { ListItem, ListItemText, ListItemIcon, ListSubheader } from '@material-ui/core';\n// import { Link } from 'react-router-dom'\n\nconst links = [\n  ['Profile', 'profile'],\n  ['Communication', 'communication'],\n  ['Members', 'members'],\n  ['Custom Fields', 'custom_fields']\n]\n\nconst ProjectNav = ({ currentLocation }) => {\n  return [<ListSubheader key={0}>Project Settings</ListSubheader>, ...links.map(([text, link]) => (\n    <ListItem\n      button\n      key={text}\n      component={Link}\n      to={`/project/${link}`}\n      selected={Boolean(currentLocation.match(link))}\n    >\n      {/* <ListItemIcon></ListItemIcon> */}\n      <ListItemText primary={\n        text\n      } />\n    </ListItem>\n  ))];\n};\n\nexport default ProjectNav;\n","import React from 'react';\nimport GigList from './GigList';\nimport ProjectNav from './ProjectNav';\nimport { connect } from 'react-redux';\nimport { Drawer, List } from '@material-ui/core';\nimport './SideBar.scss';\n\nconst SideBar = (props) => {\n  const { location, width, drawerWidth, drawerOpen, showSidebar } = props;\n  if (!showSidebar) {\n    return null;\n  }\n  const type = location.pathname.split('/')[1];\n  // const nav =\n  return (\n    <nav className='sidebar'>\n      <Drawer\n        anchor=\"left\"\n        className='gig-list'\n        variant={width === 'xs' ? 'temporary' : 'permanent'}\n        open={width !== 'xs' || drawerOpen}\n        // classes={{ modal: classes.modal }}\n        PaperProps={{\n          style: {\n            width: drawerWidth\n          }\n        }}\n      >\n        <List\n          style={{ width }}\n        >\n          {\n            (type === 'gigs' || type === '') ?\n              <GigList\n                currentLocation={location.pathname}\n              />\n              :\n              <ProjectNav currentLocation={location.pathname} />\n          }\n        </List>\n      </Drawer>\n    </nav>\n  )\n\n}\nconst mapStateToProps = state => ({\n  drawerOpen: state.drawerOpen\n})\n\nexport default connect(mapStateToProps)(SideBar);\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { login, emit } from '../socket'\nimport queryString from 'query-string'\n\nimport { Formik, Form, Field } from 'formik';\n\nconst defaultState = {\n  email: '',\n  accessCode: '',\n  // project: localStorage.getItem('project') || 'blo',\n  error: '',\n  showLogin: false\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    const query = queryString.parse(this.props.location.search)\n    this.state = { ...defaultState, ...query };\n    if (query.accessCode) {\n      this.state.showLogin = true;\n    }\n    console.log(query)\n  };\n\n  // async componentDidMount() {\n  //   const projects = (await emit('find', 'projects')).data;\n  //   this.setState({ ...defaultState, projects });\n  // }\n\n  login = (values, formikBag) => {\n    this.setState({ error: '' })\n    this.setState({ accessCode: '' });\n    login({\n      email: values.email,\n      password: values.accessCode,\n      project: values.project\n    })\n      .then(({ accessToken }) => {\n        console.log(`feathers-jwt=${accessToken}; path=/`)\n        document.cookie = `feathers-jwt=${accessToken}; path=/`;\n        // this.setState({ authed: true })\n        window.location = `/auth/auth0`;\n      })\n      .catch(error => {\n        this.setState({ error: error.message })\n      })\n      .finally(() => {\n        formikBag.setSubmitting(false);\n      })\n  };\n\n  renderError = () => {\n    if (this.state.error) {\n      return <div>Error: {this.state.error}</div>\n    }\n  }\n\n  render() {\n    const { email, accessCode, showLogin } = this.state;\n    if (!showLogin) {\n      return (\n        <div style={{\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          maxWidth: '700px',\n          margin: 'auto',\n          height: '400px',\n          alignItems: 'center',\n        }}>\n          <Button size=\"large\" variant=\"contained\" color=\"primary\" href='/auth/auth0'>\n            Login with Auth0\n          </Button>\n          <Button size=\"large\" variant=\"contained\" color=\"default\" onClick={() => this.setState({ showLogin: true })}>\n            Login with Access Code\n          </Button>\n        </div>\n      )\n    }\n    return (\n      <div style={{ maxWidth: 300, margin: 'auto' }}>\n        <h3>Login</h3>\n        {this.renderError()}\n        <Formik onSubmit={this.login} initialValues={{ email, accessCode }} enableReinitialize={true}>\n          {({ handleSubmit, handleChange, handleBlur, values, errors }) => (\n            <Form>\n              <Field\n                name=\"email\"\n                label=\"Email\"\n                data-validators=\"isRequired\"\n                fullWidth\n                component={TextField}\n              />\n              <Field\n                name=\"accessCode\"\n                label=\"Access Code\"\n                type=\"accessCode\"\n                data-validators=\"isRequired\"\n                fullWidth\n                component={TextField}\n              />\n              {/* <Field\n                name=\"project\"\n                label=\"Project\"\n                data-validators=\"isRequired\"\n                fullWidth\n                component={Select}\n                >\n                {\n                  projects.map(p => <MenuItem key={p._id} value={p._id}>{p.name}</MenuItem>)\n                }\n              </Field> */}\n              <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                Login\n              </Button>\n              <Button color=\"default\" onClick={() => this.setState({ showLogin: false })}>\n                Cancel\n              </Button>\n\n            </Form>\n          )}\n        </Formik>\n        <Link href={`/auth/auth0`}>Sign in With Auth0</Link>\n      </div >\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport {\n  Card,\n  Grid,\n  Paper,\n  Typography,\n  CardHeader,\n  CardActionArea,\n  CardContent\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst Welcome = props => {\n  return (\n    <>\n      <Typography variant=\"h3\" align=\"center\" gutterBottom>Welcome to Giggity!</Typography>\n      <Typography variant=\"body1\" align=\"center\" gutterBottom>blah blah blah abut giggity...</Typography>\n      <Grid\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n        spacing={40}\n        container\n      >\n        <Grid item xs={6}>\n          <Card raised>\n            <CardActionArea component={Link} to=\"/login\">\n              <CardHeader title=\"Sign In\" align=\"center\" />\n            </CardActionArea>\n          </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <Card raised>\n            <CardActionArea component={Link} to=\"/signup\">\n              <CardHeader title=\"Sign Up\" align=\"center\" />\n            </CardActionArea>\n          </Card>\n        </Grid>\n\n      </Grid >\n    </>\n\n  )\n}\n\nexport default Welcome\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass SimpleSnackbar extends React.Component {\n  handleClose = (event, reason) => {\n    this.props.removeError();\n  };\n\n  render() {\n    const { classes, errors } = this.props;\n    return errors.reverse().map((error, i) => {\n      return (<Snackbar\n        key={i}\n        className={classes.error}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        ContentProps={{ classes: { root: classes.error } }}\n        open={true}\n        // autoHideDuration={6000}\n        onClose={this.handleClose}\n        message={<span>{error.message || error}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={this.handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />)\n\n    });\n  }\n}\n\nSimpleSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSnackbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Typography } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\nimport { emit, login, logout } from '../socket'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nconst defaultState = {\n  email: '',\n  name: '',\n  password: '',\n  project: '',\n  error: '',\n  activeStep: 0,\n  verificationCode: ''\n}\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n  };\n\n  async componentDidMount() {\n    await logout();\n  }\n\n  submit = async (values, formikBag) => {\n    const { activeStep } = this.state;\n    try {\n      if (activeStep === 0) {\n        const { project, email } = values;\n        this.setState({ project, email });\n        const result = await emit('create', 'registration', { project, email });\n        this.setState({ verificationCode: result.verificationCode }) //for debugging only\n      } else if (activeStep === 1) {\n        const { verificationCode, project, email } = values;\n        const result = await emit('patch', 'registration', null, { verified: true }, { verificationCode, email, project });\n        await login({ email, password: verificationCode, project: result[0].project_id })\n      } else if (activeStep === 2) {\n        const { email, name, password } = values;\n        const user = await emit('patch', 'users', this.props.currentUser.userId, { name, password });\n        await login({ email, password, project: user.project })\n        this.props.history.push('/');\n      }\n      this.setState({ activeStep: activeStep + 1 })\n    } catch (e) { }\n    formikBag.setSubmitting(false);\n  }\n\n  renderCreateForm() {\n    return <>\n      <Field\n        name=\"email\"\n        label=\"Email\"\n        data-validators=\"isRequired\"\n        fullWidth\n        component={TextField}\n      />\n      <Field\n        name=\"project\"\n        label=\"Project\"\n        data-validators=\"isRequired\"\n        fullWidth\n        component={TextField}\n      />\n    </>\n  }\n\n  renderVerifyForm() {\n    return <>\n      <i>\n        this will normally come via email: {this.state.verificationCode}\n      </i>\n      <Field\n        name=\"verificationCode\"\n        label=\"Verification Code\"\n        data-validators=\"isRequired\"\n        fullWidth\n        component={TextField}\n      />\n    </>\n  }\n\n  renderSetupForm() {\n    return <div style={{ maxWidth: 300, textAlign: 'center', margin: 'auto' }}>\n      <Typography variant=\"body1\" gutterBottom>\n        We use a service called Auth0 to manage our logins. Click below to set up Auth0. You can either link your Giggity account to a google account, or set up a login and password.\n      </Typography>\n      <Button color=\"primary\" variant=\"contained\" href=\"/auth/auth0\">\n        Set up Auth0\n      </Button>\n    </div>\n  }\n\n  render() {\n    const { activeStep } = this.state;\n    return <>\n      <Typography variant=\"h5\">Create a new Giggity Project</Typography>\n      <Stepper activeStep={activeStep}>\n        {\n          ['Sign Up', 'Verify Email', 'Complete'].map(label => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))\n        }\n      </Stepper>\n      {activeStep === 2 ?\n        this.renderSetupForm() :\n        <Formik onSubmit={this.submit} initialValues={this.state} enableReinitialize={true}>\n          {({ handleSubmit, handleChange, handleBlur, values, errors }) => (\n            <Form autocomplete=\"off\">\n              {activeStep === 0 && this.renderCreateForm()}\n              {activeStep === 1 && this.renderVerifyForm()}\n              <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                Next\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      }\n    </>\n  }\n}\n\nexport default connect(\n  state => ((({ currentUser }) => ({ currentUser }))(state))\n)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport {\n  Typography,\n  List,\n  ListItem,\n  Button,\n  IconButton,\n  InputLabel,\n  FormControl,\n  Chip,\n  Grid\n} from '@material-ui/core';\nimport { emit } from '../socket'\nimport { KeyboardArrowUp, KeyboardArrowDown, RemoveCircleOutline } from '@material-ui/icons';\nimport { Formik, Form, FieldArray } from 'formik';\nimport Field from './Field';\nconst defaultField = {\n  label: '',\n  type: 'Text',\n  options: ['obe', 'two'],\n  default: '',\n  private: false\n}\n\nconst types = ['Text', 'Paragraph', 'Link', 'Dropdown', 'Member', 'Checkboxes', 'Multiple choice', 'Date', 'Time'];\n\nclass ProjectSettings extends Component {\n\n  saveProject = async (values, formikBag) => {\n    const { currentProject } = this.props;\n    await emit('patch', 'projects', currentProject._id, {\n      ...values,\n      custom_fields: values.custom_fields.map(field => ({\n        ...field,\n        options: field.options.split(',').map(option => option.trim())\n      }))\n    });\n    formikBag.setSubmitting(false);\n  }\n\n  renderField = (field, index, arrayHelpers) => {\n    return (\n      <ListItem key={index} divider>\n        <Grid container direction=\"row\" spacing={24}>\n          <Field\n            label='Label'\n            name={`custom_fields[${index}].label`}\n            data-validators=\"isRequired\"\n          />\n          <Field\n            label=\"Type\"\n            name={`custom_fields[${index}].type`}\n            data-validators=\"isRequired\"\n            type='Select'\n            options={types}\n          />\n          {\n            ['Dropdown', 'Multiple Choice'].includes(field.type) &&\n            <Field\n              label=\"Options\"\n              name={`custom_fields[${index}].options`}\n              onChange={e => console.log(e)}\n            />\n          }\n          <Field\n            label=\"Default Value\"\n            name={`custom_fields[${index}].default`}\n          />\n          <Field\n            name={`custom_fields[${index}].private`}\n            label='Private Field'\n            type='Checkboxes'\n          />\n          <IconButton onClick={() => arrayHelpers.move(index, index - 1)}>\n            <KeyboardArrowUp fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={() => arrayHelpers.move(index, index + 1)}>\n            <KeyboardArrowDown fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={() => arrayHelpers.remove(index)}>\n            <RemoveCircleOutline fontSize=\"small\" />\n          </IconButton>\n        </Grid>\n      </ListItem>\n    )\n  }\n\n  render() {\n    const { currentProject } = this.props;\n    const initialValues = {\n      ...currentProject,\n      custom_fields: currentProject.custom_fields.map(field => ({\n        ...field,\n        options: field.options.join(', ')\n      }))\n\n    }\n    return (\n      <>\n        <Helmet>\n          <title>{`Giggity - ${currentProject.name} Settings`}</title>\n        </Helmet>\n        <Formik\n          onSubmit={this.saveProject}\n          initialValues={initialValues}\n          render={formProps => {\n            return (\n              <Form>\n                <Button type='submit'>\n                  Save Settings\n                        </Button>\n                <Typography gutterBottom variant=\"h5\">Custom Fields</Typography>\n                <FieldArray\n                  name=\"custom_fields\"\n                  render={(arrayHelpers) => (\n                    <List>\n                      {formProps.values.custom_fields.map((field, index) => (\n                        this.renderField(field, index, arrayHelpers)\n                      ))}\n                      <Button onClick={() => arrayHelpers.push(defaultField)}>\n                        Add Field\n                        </Button>\n                    </List>\n                  )}\n                />\n              </Form>\n            )\n          }}\n        />\n      </>\n    );\n  }\n\n}\nconst mapStatetoProps = state => ((({ currentProject }) => ({ currentProject }))(state))\n\nexport default connect(mapStatetoProps)(ProjectSettings);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../../components/Form';\nimport { emit } from '../../socket';\n\n\nconst ProjectProfile = ({ currentProject: { _id, name } }) => {\n\n  const submit = async values => {\n    await emit('patch', 'projects', _id, values);\n  }\n\n  const fields = [\n    { type: 'Text', label: 'Project Name', name: 'name' }\n  ]\n\n  return <Form\n    initialValues={{ name }}\n    onSubmit={submit}\n    fields={fields}\n    submitLabel=\"Save Project\"\n  />\n};\n\nconst mapStatetoProps = state => ((({ currentProject }) => ({ currentProject }))(state))\n\nexport default connect(mapStatetoProps)(ProjectProfile);\n","import React, { Component } from 'react';\nimport Link from '../../components/Link';\nimport {\n  IconButton,\n  Typography,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport { Delete as DeleteIcon } from '@material-ui/icons';\nimport Form from '../../components/Form';\nimport Field from '../../components/Field';\nimport { emit } from '../../socket';\nimport './Members.scss';\nconst roles = ['Admin', 'Manager', 'Member', 'Read-Only']\nconst defaulState = {\n  email: '',\n  role: 'Member'\n}\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = defaulState;\n\n    this.userFields = [\n      { type: 'Text', name: 'email', label: 'Email' },\n      { type: 'Dropdown', name: 'role', label: 'Role', options: roles }\n    ]\n  }\n\n  inviteMember = async values => {\n    const member = await emit('create', 'users', { email: values.email, name: values.email, role: values.role });\n    console.log(member);\n  }\n\n  updateMember = async (values) => {\n    console.log('update', values);\n    await emit('patch', 'members', values._id, values);\n  }\n\n  deleteMember = id => async () => {\n    const member = await emit('remove', 'members', id);\n    console.log(member);\n  }\n\n  render() {\n\n    return (\n      <div className=\"members\">\n        <Typography gutterBottom variant=\"subtitle1\">Members</Typography>\n        {\n          this.props.users.map(user => (\n            <div key={user._id} className='member'>\n              {user.name}\n              <Form\n                initialValues={user}\n                fields={[{\n                  type: 'Dropdown', name: 'role', options: roles\n                }]}\n                autoSubmit={true}\n                onSubmit={this.updateMember}\n              />\n              <IconButton\n                color=\"inherit\"\n                onClick={this.deleteMember(user._id)}\n              >\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </div>\n          ))\n        }\n        <Typography gutterBottom variant=\"subtitle1\">Invite Member</Typography>\n        <Form initialValues={this.state} fields={this.userFields} submitLabel='Invite Member' onSubmit={this.inviteMember} />\n      </div>\n    )\n  }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Hidden,\n  IconButton,\n  Typography,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport {\n  Menu as MenuIcon,\n  Settings as SettingsIcon,\n  ExitToApp as LogoutIcon\n} from '@material-ui/icons';\nimport Link from '../components/Link'\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport { emit, logout } from '../socket';\nimport './NavBar.scss';\n\nclass NavBar extends Component {\n  switchProject = async (event) => {\n    const project = event.target.value;\n    await emit('patch', 'users', this.props.currentUser.userId, { project });\n    window.location.reload();\n  }\n\n  handleDrawerToggle = () => {\n    this.props.updateDrawer(!this.props.drawerOpen);\n  }\n\n  renderSwitchProject() {\n    const { currentUser: { project }, projects } = this.props;\n    if (!projects || projects.length <= 1) {\n      return null;\n    }\n    return (\n      <Select\n        style={{ color: '#fff' }}\n        inputProps={{ color: \"inherit\" }}\n        name=\"project\"\n        value={project}\n        onChange={e => this.switchProject(e)}\n      >\n        {\n          projects.map(({ name, _id }) =>\n            <MenuItem\n              key={_id}\n              value={_id}\n            >\n              {name}\n            </MenuItem>)\n        }\n      </Select>\n    )\n  }\n\n  render() {\n    const { authenticated } = this.props;\n    return (\n      <AppBar position=\"fixed\" className='navbar'>\n        <Toolbar>\n          <Hidden smUp>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h4\" color=\"inherit\" noWrap style={{ flexGrow: 1 }}>\n            <Link color=\"inherit\" to='/'>\n              Giggity\n            </Link>\n            <Link color=\"inherit\" to='/project'>\n              <IconButton\n                color=\"inherit\"\n              >\n                <SettingsIcon />\n              </IconButton>\n            </Link>\n          </Typography>\n\n          {authenticated &&\n            <>\n              {this.renderSwitchProject()}\n              <Link color=\"inherit\" to='/' onClick={() => logout()}>\n                Logout\n                <IconButton\n                  color=\"inherit\"\n                  onClick={this.handleDrawerToggle}\n                >\n                  <LogoutIcon />\n                </IconButton>\n              </Link>\n\n            </>\n          }\n        </Toolbar>\n      </AppBar >\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.authenticated,\n  currentUser: state.currentUser,\n  projects: state.projects,\n  drawerOpen: state.drawerOpen\n});\n\nconst mapDispatchToProps = {\n  updateDrawer: actions.updateDrawer\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Gig from './Gig';\nimport User from './User';\nimport SideBar from '../views/SideBar';\nimport Login from './Login';\nimport Welcome from './Welcome';\nimport Errors from './Errors';\nimport SignUp from './SignUp';\nimport ProjectSettings from './ProjectSettings';\nimport ProjectProfile from '../views/project/ProjectProfile';\nimport Members from '../views/project/Members';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport { logout, authenticate } from '../socket';\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport NavBar from '../views/NavBar';\nimport './Home.css';\nlet drawerWidth = 300;\n\nconst styles = theme => (console.log(theme) || {\n  appBar: {\n    zIndex: theme.zIndex.modal - 1,\n  },\n  toolbar: theme.mixins.toolbar,\n  home: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    flex: '1 1 100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: drawerWidth\n    }\n  },\n  paper: {\n    color: '#000'\n  }\n});\n\nconst defaultState = {\n  initialized: false\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n    this.public_routes = ['/', '/login', '/signup']\n  }\n\n  componentDidMount() {\n    authenticate()\n      .finally(() => {\n        this.setState({ initialized: true })\n      })\n  }\n\n  componentDidUpdate() {\n    this.checkAuth()\n  }\n\n  checkAuth() {\n    if (this.state.initialized && !this.props.authenticated && !this.public_routes.includes(this.props.location.pathname)) {\n      this.props.history.push(`/`);\n      logout();\n    }\n  }\n\n  render() {\n    const { classes, authenticated, location, width, users, errors, removeError } = this.props;\n    if (!this.state.initialized) {\n      return \"...\";\n    }\n    const showSidebar = authenticated && (location.pathname === '/' || location.pathname.match(/^\\/(gigs|project)/));\n    return (\n      <div style={{ display: 'flex' }}>\n        <NavBar />\n        <SideBar {...{ authenticated, location, width, drawerWidth, showSidebar }} />\n        <main\n          className={classes.home}\n          style={{\n            marginLeft: showSidebar && width !== 'xs' ? drawerWidth : 0\n          }}>\n          <div className={classes.toolbar} />\n          <Errors errors={errors} removeError={removeError} />\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path='/gigs/new' component={Gig} />\n            <Route exact path='/members/new' component={User} />\n            <Route path='/gigs/:id' component={Gig} />\n            <Route path=\"/project/profile\" component={ProjectProfile} />\n            <Route path=\"/project/custom_fields\" component={ProjectSettings} />\n            <Route exact path='/project/members'>\n              <Members users={users} />\n            </Route>\n            <Route path=\"/project/members/:id\" component={User} />\n            <Route exact path=''>\n              {\n                !showSidebar && <Welcome />\n              }\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  authenticated: state.authenticated,\n  users: state.users,\n});\n\nconst mapDispatchToProps = {\n  removeError: actions.removeError\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withWidth()(Home)));\n","import React from 'react';\nimport Route from 'react-router-dom/Route';\nimport Switch from 'react-router-dom/Switch';\nimport Home from './Home';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/lightBlue';\nimport pink from '@material-ui/core/colors/pink';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: blue[900] }, // Purple and green play nicely together.\n    secondary: { main: pink[700] }, // This is just green.A700 as hex.\n    action: {\n      // selected: blue[300]\n    }\n  },\n  typography: { useNextVariants: true },\n});\n\nconst App = () => (\n  <React.Fragment>\n    <CssBaseline />\n    <MuiThemeProvider theme={theme}>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </MuiThemeProvider>\n  </React.Fragment>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}